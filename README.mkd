
---

# 📊 Calculadora de Média Ponderada - Interface Gráfica

Este projeto é uma aplicação web simples desenvolvida em Python com **Streamlit** para calcular a **média ponderada** de entradas de mercadorias. Agora com suporte para arquivos `.txt` ou colagem direta de conteúdo copiado da tela do sistema.

---

## 🚀 Funcionalidades

- Upload de arquivos `.txt` com dados no formato `gridConsulta.fill([...])`
- Alternativamente, colagem direta do conteúdo do `.txt`
- Cálculo da média ponderada com base em **quantidade** e **custo gerencial**
- Extração inteligente de dados mesmo com **vírgulas como separador decimal**
- Interface bonita, interativa e fácil de usar
- Responsivo e compatível com qualquer navegador

---

## 📦 Requisitos

Certifique-se de ter o **Python 3.8 ou superior** instalado.

---

### 1. Instale as dependências

Você pode instalar todas de uma vez com:

```bash
pip install -r requirements.txt
```

---

### 2. Rode a aplicação

```bash
streamlit run app.py
```

A aplicação abrirá automaticamente no seu navegador padrão (geralmente em `http://localhost:8501`).

---

## 📁 Estrutura do Projeto

```
📦 Media-Ponderada/
├── app.py               # Código principal da aplicação
├── requirements.txt     # Bibliotecas necessárias
└── README.md            # Este arquivo de instruções
```

---

## 📚 Sobre os dados de entrada

Você pode fornecer os dados de duas formas:

### ✅ Opção 1: Upload de Arquivo `.txt`

- O arquivo deve conter linhas no seguinte padrão:
  ```
  gridConsulta.fill(['22/01/2025', '12', '2056085', ..., '8,07', ...]);
  ```
- A aplicação extrai automaticamente os valores corretos mesmo que os números usem vírgula como separador decimal (ex: `8,07`).

### ✅ Opção 2: Colagem Manual

- Copie e cole diretamente o conteúdo do `.txt` na caixa de texto da aplicação.

---

## 📊 Sobre os campos obrigatórios

Para o cálculo, os seguintes campos são utilizados:

- **Qtd.** → Quantidade da entrada (posição 4)
- **Custo Gerencial** → Custo por unidade (posição 17)
- **Dt.Entrada** → Data da entrada (posição 0)

A aplicação utiliza os valores mais recentes primeiro (ordenando pela data) até atingir a quantidade informada de estoque disponível.

---